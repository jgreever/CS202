/* orders.cpp
 *
 * Justin Greever
 * CS202 - Program #1
 * 01/09/2020
 * 
 * //TODO: Add comments
 */

#include "orders.hpp"
using namespace std;

//default address constructor
address::address()
{
    street = zip = NULL;
};

//default address destructor
address::~address()
{

};

//address copy constructor
address::address(const address &to_add) : street(to_add.street), zip(to_add.zip)
{
    if (to_add.street)
    {
        char *street = new char[strlen(to_add.street) + 1];
        strcpy(street, to_add.street);
    }
    else
        street = NULL;
    
    if (to_add.zip)
    {
        char *zip = new char[strlen(to_add.zip) + 1];
        strcpy(zip, to_add.zip);
    }
    else
        zip = NULL;
};

//address object
address::address(char *street, char *zip) : street(street), zip(zip)
{
    //Nothing more to do
};

//This is the default constructor
orders::orders()
{
    //Nothing to do here! Done in the initialization list above
}

//Add a new order. This will accept the following arguments:
//char *customer_name, char *customer_address, char *shipping_type
//Order ID will be autogenerated within this function (most likely
//incremental)
void orders::new_order(char *name, char *address, char *shipping)
{
    
}

void orders::edit_order()
{

}

void orders::cancel_order()
{

}
